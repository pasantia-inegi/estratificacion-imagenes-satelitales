options(htmltools.dir.version = TRUE)
knitr::opts_chunk$set(message = FALSE, echo = FALSE)
library(xaringanthemer)
xaringanExtra::use_panelset()
xaringanExtra::use_clipboard()
library(feather)
library(tidyverse)
library(plotly)
results <- read_feather("data/xgboost_predictions.feather")
importance_matrix <- read_feather("data/importance_matrix.feather")
importance_plot <- importance_matrix %>%
dplyr::slice(1:20) %>%
ggplot(aes(x = reorder(Feature, Gain)  , y = Gain)) +
geom_bar(stat = "identity")  +
coord_flip() +
labs(title = "Most important variables") +
theme_bw() +
theme(axis.title.y = element_blank(),
plot.title = element_text(size = 16)
)
ggplotly(importance_plot, tooltip = c("y"))
# qqplots
pred_sorted <- results %>%
filter(tipo == "predicted") %>%
pull(value) %>%
sort()
real_sorted <- results %>%
filter(tipo == "real") %>%
pull(value) %>%
sort()
df_sorted <- data.frame(real = real_sorted, pred = pred_sorted)
qqplot <- ggplot(df_sorted, aes(x = real, y = pred )) +
geom_point() +
scale_y_continuous(limits = c(min(real_sorted), max(real_sorted))) +
geom_abline() +
labs(title = "QQ plot. Predicted versus real") +
theme_bw() +
theme(axis.title.y = element_blank(),
plot.title = element_text(size = 16)
)
ggplotly(qqplot)
density_plot <- results %>%
ggplot(aes(value, fill = tipo, color = tipo  )) +
geom_density(alpha = 0.1) +
theme_bw()
density_plot
# Gráfico de puntos
results_wider <-  data.frame(real = results %>% filter(tipo == "real") %>% pull(value), predicted =  results %>% filter(tipo == "predicted") %>% pull(value))
corr_log <- results_wider %>%
ggplot(aes(x = log10(real)  , y = log10(predicted) )) +
stat_poly_line() +
stat_poly_eq() +
geom_point() +
geom_abline() +
theme_bw()
options(htmltools.dir.version = TRUE)
knitr::opts_chunk$set(message = FALSE, echo = FALSE)
library(xaringanthemer)
xaringanExtra::use_panelset()
xaringanExtra::use_clipboard()
library( ggpmisc)
library(tidyverse)
library(feather)
library(tidyverse)
library(plotly)
results <- read_feather("data/xgboost_predictions.feather")
importance_matrix <- read_feather("data/importance_matrix.feather")
importance_plot <- importance_matrix %>%
dplyr::slice(1:20) %>%
ggplot(aes(x = reorder(Feature, Gain)  , y = Gain)) +
geom_bar(stat = "identity")  +
coord_flip() +
labs(title = "Most important variables") +
theme_bw() +
theme(axis.title.y = element_blank(),
plot.title = element_text(size = 16)
)
ggplotly(importance_plot, tooltip = c("y"))
# qqplots
pred_sorted <- results %>%
filter(tipo == "predicted") %>%
pull(value) %>%
sort()
real_sorted <- results %>%
filter(tipo == "real") %>%
pull(value) %>%
sort()
df_sorted <- data.frame(real = real_sorted, pred = pred_sorted)
qqplot <- ggplot(df_sorted, aes(x = real, y = pred )) +
geom_point() +
scale_y_continuous(limits = c(min(real_sorted), max(real_sorted))) +
geom_abline() +
labs(title = "QQ plot. Predicted versus real") +
theme_bw() +
theme(axis.title.y = element_blank(),
plot.title = element_text(size = 16)
)
ggplotly(qqplot)
density_plot <- results %>%
ggplot(aes(value, fill = tipo, color = tipo  )) +
geom_density(alpha = 0.1) +
theme_bw()
density_plot
# Gráfico de puntos
results_wider <-  data.frame(real = results %>% filter(tipo == "real") %>% pull(value), predicted =  results %>% filter(tipo == "predicted") %>% pull(value))
corr_log <- results_wider %>%
ggplot(aes(x = log10(real)  , y = log10(predicted) )) +
stat_poly_line() +
stat_poly_eq() +
geom_point() +
geom_abline() +
theme_bw()
corr_log
options(htmltools.dir.version = TRUE)
knitr::opts_chunk$set(message = FALSE, echo = FALSE)
library(xaringanthemer)
xaringanExtra::use_panelset()
xaringanExtra::use_clipboard()
library( ggpmisc)
library(tidyverse)
library(feather)
library(tidyverse)
library(plotly)
results <- read_feather("data/xgboost_predictions.feather")
importance_matrix <- read_feather("data/importance_matrix.feather")
importance_plot <- importance_matrix %>%
dplyr::slice(1:20) %>%
ggplot(aes(x = reorder(Feature, Gain)  , y = Gain)) +
geom_bar(stat = "identity")  +
coord_flip() +
labs(title = "Most important variables") +
theme_bw() +
theme(axis.title.y = element_blank(),
plot.title = element_text(size = 16)
)
ggplotly(importance_plot, tooltip = c("y"))
# qqplots
pred_sorted <- results %>%
filter(tipo == "predicted") %>%
pull(value) %>%
sort()
real_sorted <- results %>%
filter(tipo == "real") %>%
pull(value) %>%
sort()
df_sorted <- data.frame(real = real_sorted, pred = pred_sorted)
qqplot <- ggplot(df_sorted, aes(x = real, y = pred )) +
geom_point() +
scale_y_continuous(limits = c(min(real_sorted), max(real_sorted))) +
geom_abline() +
labs(title = "QQ plot. Predicted versus real") +
theme_bw() +
theme(axis.title.y = element_blank(),
plot.title = element_text(size = 16)
)
ggplotly(qqplot)
density_plot <- results %>%
ggplot(aes(value, fill = tipo, color = tipo  )) +
geom_density(alpha = 0.1) +
theme_bw()
density_plot
# Gráfico de puntos
results_wider <-  data.frame(real = results %>% filter(tipo == "real") %>% pull(value), predicted =  results %>% filter(tipo == "predicted") %>% pull(value))
corr_log <- results_wider %>%
ggplot(aes(x = log10(real)  , y = log10(predicted) )) +
stat_poly_line() +
stat_poly_eq() +
geom_point() +
geom_abline() +
theme_bw()
corr_log
library(tidyverse)
library(readxl)
library(feather)
casen <- read_feather("data/casen_compacta.feather")
epf <- read_excel("data/tabla_ix_epf.xlsx")
upm_epf <- epf %>%
filter(region == 13) %>%
group_by(upm) %>%
filter(n() >= 2) %>%
slice(1) %>%
ungroup()
upm_casen <-  casen %>%
select(upm = id_upm)
combinado <- upm_epf %>%
bind_rows(upm_casen) %>%
group_by(upm) %>%
slice(1) %>%
ungroup()
total_upm <- combinado %>%
nrow() %>%
as.character()
